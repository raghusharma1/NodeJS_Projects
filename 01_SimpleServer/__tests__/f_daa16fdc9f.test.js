// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
const { f } = require('../js/bootstrap.min');

describe('f function suite', () => {
  
  let g = null;
  let b = null;
  let e = null;
  let h = false;

  beforeEach(() => {
    g = {
      removeClass: jest.fn().mockReturnThis(),
      find: jest.fn().mockReturnThis(),
      end: jest.fn().mockReturnThis(),
      attr: jest.fn().mockReturnThis()
    };

    b = { 
      ...g,
      addClass: jest.fn().mockReturnThis(),
      parent: jest.fn().mockReturnThis(),
      closest: jest.fn().mockReturnThis()
    };

    e = jest.fn();
  });

  afterEach(() => {
    jest.clearAllMocks();
  });

  test('should call appropriate methods when h is false', () => {
    f(g, b, e, h);
    expect(g.removeClass).toBeCalledWith('active');
    expect(b.addClass).toBeCalledWith('active');
    expect(b.removeClass).toBeCalledWith('fade');
    expect(e).toBeCalled();
  });

  test('should call appropriate methods when h is true', () => {
    h = true;
    f(g, b, e, h);
    expect(g.removeClass).toBeCalledWith('active');
    expect(b.addClass).toBeCalledWith('active');
    expect(b.addClass).toBeCalledWith('in');
    expect(e).toBeCalled();
  });
});
