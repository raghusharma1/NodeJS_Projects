// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Importing necessary modules
const $ = require('jquery');
global.$ = $;
const bootstrap = require('../js/bootstrap.min.js');

describe('Bootstrap function tests', () => {
  let b, g, e;

  beforeEach(() => {
    // Create some mock jQuery elements
    b = $(`<div class="dropdown-menu"></div>`);
    g = $(`<div class="active"></div>`);
    e = jest.fn();

    // Mock the jQuery functions that are used in the function
    $.fn.removeClass = jest.fn();
    $.fn.find = jest.fn();
    $.fn.end = jest.fn();
    $.fn.attr = jest.fn();
    $.fn.addClass = jest.fn();
    $.fn.parent = jest.fn();
    $.fn.closest = jest.fn();
  });

  test('should correctly execute the function', () => {
    // Call the function with our mock data
    bootstrap.f(b, g, e);

    // Check that all the necessary functions were called with the correct arguments
    expect($.fn.removeClass).toHaveBeenCalledWith('active');
    expect($.fn.find).toHaveBeenCalledWith('> .dropdown-menu > .active');
    expect($.fn.end).toHaveBeenCalled();
    expect($.fn.attr).toHaveBeenCalledWith('aria-expanded', false);
    expect($.fn.addClass).toHaveBeenCalledWith('active');
    expect($.fn.attr).toHaveBeenCalledWith('aria-expanded', true);
    expect($.fn.parent).toHaveBeenCalledWith('.dropdown-menu');
    expect($.fn.closest).toHaveBeenCalledWith('li.dropdown');
    expect($.fn.addClass).toHaveBeenCalledWith('active');
    expect($.fn.attr).toHaveBeenCalledWith('aria-expanded', true);

    // If e is defined, it should be called
    if (e) {
      expect(e).toHaveBeenCalled();
    }
  });

  test('should handle when e is not defined', () => {
    // Call the function with e as undefined
    bootstrap.f(b, g, undefined);

    // e should not have been called
    expect(e).not.toHaveBeenCalled();
  });
});
