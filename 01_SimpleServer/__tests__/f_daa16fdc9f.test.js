// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Import the necessary dependencies
const bootstrap = require('../js/bootstrap.min.js');

// Test suite for the 'f' function
describe('Function f', () => {
    let b, e, g;

    // Set up the necessary preconditions before each test case
    beforeEach(() => {
        b = {
            addClass: jest.fn(),
            removeClass: jest.fn(),
            find: jest.fn(),
            attr: jest.fn(),
            parent: jest.fn(),
            closest: jest.fn(),
        };
        e = jest.fn();
        g = {
            removeClass: jest.fn(),
            find: jest.fn(),
        };
    });

    // Test case 1: Check if the necessary methods are called with the correct arguments
    test('should call the necessary methods with correct arguments', () => {
        // Call the function 'f'
        bootstrap.f();

        // Check if the necessary methods are called with the correct arguments
        expect(b.addClass).toHaveBeenCalledWith('active');
        expect(b.removeClass).toHaveBeenCalledWith('fade');
        expect(b.find).toHaveBeenCalledWith('[data-toggle="tab"]');
        expect(b.attr).toHaveBeenCalledWith('aria-expanded', true);
        expect(g.removeClass).toHaveBeenCalledWith('active');
        expect(e).toHaveBeenCalled();
    });

    // Test case 2: Check if the necessary methods are called the correct number of times
    test('should call the necessary methods the correct number of times', () => {
        // Call the function 'f'
        bootstrap.f();

        // Check if the necessary methods are called the correct number of times
        expect(b.addClass).toHaveBeenCalledTimes(2);
        expect(b.removeClass).toHaveBeenCalledTimes(1);
        expect(b.find).toHaveBeenCalledTimes(2);
        expect(b.attr).toHaveBeenCalledTimes(2);
        expect(g.removeClass).toHaveBeenCalledTimes(1);
        expect(e).toHaveBeenCalledTimes(1);
    });
});
