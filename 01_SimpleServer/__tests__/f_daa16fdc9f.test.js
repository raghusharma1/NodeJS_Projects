// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Importing required functions and modules
const $ = require('jquery');
const bootstrap = require('../js/bootstrap.min.js');

// Test Suite for f() method
describe('f() method in bootstrap.min.js', () => {
    let b, e, g, h;

    // Setup before each test case
    beforeEach(() => {
        // Creating jQuery objects and assigning to variables
        b = $('<div></div>');
        g = $('<div class="active"><div class="dropdown-menu"><div class="active"></div></div><div data-toggle="tab"></div></div>');
        e = jest.fn();
        h = true;
    });

    // Test case 1: Check if the function executes without errors and updates the DOM as expected
    test('Check if the function executes without errors and updates the DOM as expected', () => {
        bootstrap.f.call({$element: b}, e, g, h);
        expect(g.hasClass('active')).toBe(false);
        expect(g.find('> .dropdown-menu > .active').hasClass('active')).toBe(false);
        expect(g.find('[data-toggle="tab"]').attr('aria-expanded')).toBe('false');
        expect(b.hasClass('active')).toBe(true);
        expect(b.find('[data-toggle="tab"]').attr('aria-expanded')).toBe('true');
        expect(b.hasClass('in')).toBe(true);
        expect(e).toHaveBeenCalled();
    });

    // Test case 2: Check if the function executes without errors and updates the DOM as expected when h is false
    test('Check if the function executes without errors and updates the DOM as expected when h is false', () => {
        h = false;
        bootstrap.f.call({$element: b}, e, g, h);
        expect(g.hasClass('active')).toBe(false);
        expect(g.find('> .dropdown-menu > .active').hasClass('active')).toBe(false);
        expect(g.find('[data-toggle="tab"]').attr('aria-expanded')).toBe('false');
        expect(b.hasClass('active')).toBe(true);
        expect(b.find('[data-toggle="tab"]').attr('aria-expanded')).toBe('true');
        expect(b.hasClass('in')).toBe(false);
        expect(e).toHaveBeenCalled();
    });
});
