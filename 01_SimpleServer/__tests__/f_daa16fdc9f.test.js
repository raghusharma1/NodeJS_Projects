// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Import the dependencies for testing
const f = require('../js/bootstrap.min.js');

// Start test suite
describe('Test the f function from bootstrap.min.js', () => {

    // Test cases
    test('f function is defined', () => {
        expect(f).toBeDefined();
    });

    test('f function works correctly when called', () => {
        // Create mock elements and functions for testing purposes
        const mockElement = {
            removeClass: jest.fn().mockReturnThis(),
            find: jest.fn().mockReturnThis(),
            attr: jest.fn().mockReturnThis(),
            addClass: jest.fn().mockReturnThis(),
            parent: jest.fn().mockReturnThis(),
            closest: jest.fn().mockReturnThis(),
            end: jest.fn().mockReturnThis(),
        };

        const g = {
            removeClass: jest.fn().mockReturnThis(),
            find: jest.fn().mockReturnThis(),
        };

        const e = jest.fn();

        // Call the function with the mock elements and functions
        f(mockElement, g, e);

        // Check if the functions were called correctly
        expect(mockElement.removeClass).toHaveBeenCalledWith("active");
        expect(mockElement.find).toHaveBeenCalledWith("> .dropdown-menu > .active");
        expect(mockElement.attr).toHaveBeenCalledWith("aria-expanded", false);
        expect(mockElement.addClass).toHaveBeenCalledWith("active");
        expect(mockElement.find).toHaveBeenCalledWith('[data-toggle="tab"]');
        expect(mockElement.attr).toHaveBeenCalledWith("aria-expanded", true);
        expect(mockElement.parent).toHaveBeenCalledWith(".dropdown-menu");
        expect(mockElement.closest).toHaveBeenCalledWith("li.dropdown");
        expect(mockElement.addClass).toHaveBeenCalledWith("active");
        expect(mockElement.find).toHaveBeenCalledWith('[data-toggle="tab"]');
        expect(mockElement.attr).toHaveBeenCalledWith("aria-expanded", true);
        expect(e).toHaveBeenCalled();
    });
});
