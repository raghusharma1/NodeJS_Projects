// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Import the necessary dependencies
const bootstrap = require('../js/bootstrap.min.js');

// Test suite for the 'f' function
describe('Function f', () => {
    let b, g, e;
    
    // Set up the necessary preconditions before each test
    beforeEach(() => {
        b = {
            addClass: jest.fn(),
            removeClass: jest.fn(),
            find: jest.fn(),
            attr: jest.fn(),
            parent: jest.fn(),
            closest: jest.fn(),
        };
        
        g = {
            removeClass: jest.fn(),
            find: jest.fn(),
        };
        
        e = jest.fn();
    });
    
    // Test case 1: Check if the 'removeClass' function is called correctly
    test('Check if the removeClass function is called correctly', () => {
        bootstrap.f();
        expect(g.removeClass).toHaveBeenCalledWith("active");
    });
    
    // Test case 2: Check if the 'addClass' function is called correctly
    test('Check if the addClass function is called correctly', () => {
        bootstrap.f();
        expect(b.addClass).toHaveBeenCalledWith("active");
    });
    
    // Test case 3: Check if the 'attr' function is called correctly
    test('Check if the attr function is called correctly', () => {
        bootstrap.f();
        expect(b.attr).toHaveBeenCalledWith("aria-expanded", true);
    });
    
    // Test case 4: Check if the 'e' function is called correctly
    test('Check if the e function is called correctly', () => {
        bootstrap.f();
        expect(e).toHaveBeenCalled();
    });
});
