// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=f_14aa59bc21
ROOST_METHOD_SIG_HASH=f_daa16fdc9f


*/

// ********RoostGPT********
// Importing required functions and modules
const { f } = require('../js/bootstrap.min');

// Test suite for function f
describe('Testing f function in bootstrap.min.js', () => {
  let b, g, e;

  // beforeEach function to initialize required variables and dependencies
  beforeEach(() => {
    b = {
      addClass: jest.fn(),
      removeClass: jest.fn(),
      find: jest.fn(),
      parent: jest.fn(),
      closest: jest.fn(),
      attr: jest.fn(),
    };
    g = {
      removeClass: jest.fn(),
      find: jest.fn(),
      end: jest.fn(),
    };
    e = jest.fn();
  });

  // Test case for checking the correct addition and removal of classes
  test('Should correctly add and remove classes', () => {
    f();
    expect(g.removeClass).toHaveBeenCalledWith('active');
    expect(b.addClass).toHaveBeenCalledWith('active');
    expect(b.removeClass).toHaveBeenCalledWith('fade');
  });

  // Test case for checking the correct calling of find, end, and attr functions
  test('Should correctly call find, end, and attr functions', () => {
    f();
    expect(g.find).toHaveBeenCalledWith('> .dropdown-menu > .active');
    expect(g.end).toHaveBeenCalled();
    expect(b.find).toHaveBeenCalledWith('[data-toggle="tab"]');
    expect(b.attr).toHaveBeenCalledWith('aria-expanded', true);
  });

  // Test case for checking the correct calling of parent and closest functions
  test('Should correctly call parent and closest functions', () => {
    f();
    expect(b.parent).toHaveBeenCalledWith('.dropdown-menu');
    expect(b.closest).toHaveBeenCalledWith('li.dropdown');
  });

  // Test case for checking the correct calling of e function
  test('Should correctly call e function', () => {
    f();
    expect(e).toHaveBeenCalled();
  });
});
