// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=d_39bb39108d
ROOST_METHOD_SIG_HASH=d_72e6da76f1


*/

// ********RoostGPT********
// Importing necessary modules for testing
const bootstrap = require("../js/bootstrap.min.js");

// Test Suite for function d
describe("Function d tests", () => {
    let f, b, e;

    // Setup necessary variables and functions before each test
    beforeEach(() => {
        f = {
            detach: jest.fn()
        };
        b = jest.fn();
        e = {
            hoverState: 'out',
            $element: {
                removeAttr: jest.fn(),
                trigger: jest.fn()
            },
            type: 'test'
        };
    });

    // Test Case 1: Check if f.detach is called when hoverState is not 'in'
    test("Should call f.detach when hoverState is not 'in'", () => {
        bootstrap.d();
        expect(f.detach).toHaveBeenCalled();
    });

    // Test Case 2: Check if removeAttr and trigger are called on $element
    test("Should call removeAttr and trigger on $element", () => {
        bootstrap.d();
        expect(e.$element.removeAttr).toHaveBeenCalledWith('aria-describedby');
        expect(e.$element.trigger).toHaveBeenCalledWith('hidden.bs.' + e.type);
    });

    // Test Case 3: Check if b is called when it is defined
    test("Should call b when it is defined", () => {
        bootstrap.d();
        expect(b).toHaveBeenCalled();
    });
});
