// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=d_39bb39108d
ROOST_METHOD_SIG_HASH=d_72e6da76f1


*/

// ********RoostGPT********
// Importing necessary modules for testing
const bootstrap = require("../js/bootstrap.min");

// Test Suite for function d
describe("Function d Test Suite", () => {
    let f, e, b;

    // Setup necessary mock functions and variables
    beforeEach(() => {
        f = { detach: jest.fn() };
        e = { 
            hoverState: 'out', 
            $element: { 
                removeAttr: jest.fn(), 
                trigger: jest.fn()
            }, 
            type: 'testType' 
        };
        b = jest.fn();
    });

    // Test Case 1: hoverState is not 'in'
    test("hoverState is not 'in'", () => {
        bootstrap.d(f, e, b);
        expect(f.detach).toHaveBeenCalled();
        expect(e.$element.removeAttr).toHaveBeenCalledWith('aria-describedby');
        expect(e.$element.trigger).toHaveBeenCalledWith('hidden.bs.testType');
        expect(b).toHaveBeenCalled();
    });

    // Test Case 2: hoverState is 'in'
    test("hoverState is 'in'", () => {
        e.hoverState = 'in';
        bootstrap.d(f, e, b);
        expect(f.detach).not.toHaveBeenCalled();
        expect(e.$element.removeAttr).not.toHaveBeenCalled();
        expect(e.$element.trigger).not.toHaveBeenCalled();
        expect(b).not.toHaveBeenCalled();
    });
});
