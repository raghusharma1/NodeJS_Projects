// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=d_39bb39108d
ROOST_METHOD_SIG_HASH=d_72e6da76f1


*/

// ********RoostGPT********
// Importing required modules
const bootstrap = require('../js/bootstrap.min.js');

// Mocking the dependencies
bootstrap.f = { detach: jest.fn() };
bootstrap.b = jest.fn();
bootstrap.e = { $element: { removeAttr: jest.fn(), trigger: jest.fn() }, hoverState: 'in', type: 'test' };

describe('Function d', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  test('should call correct functions when hoverState is not equal to "in"', () => {
    bootstrap.e.hoverState = 'out';
    bootstrap.d();
    expect(bootstrap.f.detach).toHaveBeenCalled();
    expect(bootstrap.e.$element.removeAttr).toHaveBeenCalledWith('aria-describedby');
    expect(bootstrap.e.$element.trigger).toHaveBeenCalledWith('hidden.bs.test');
    expect(bootstrap.b).toHaveBeenCalled();
  });

  test('should not call detach function when hoverState is equal to "in"', () => {
    bootstrap.e.hoverState = 'in';
    bootstrap.d();
    expect(bootstrap.f.detach).not.toHaveBeenCalled();
  });
});
