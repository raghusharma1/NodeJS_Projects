// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=d_39bb39108d
ROOST_METHOD_SIG_HASH=d_72e6da76f1


*/

// ********RoostGPT********
const bootstrap = require('../js/bootstrap.min.js');

describe("Bootstrap Component Test Suite", () => {
  let hoverState;
  let detach;
  let removeAttr;
  let trigger;
  let b;

  beforeEach(() => {
    hoverState = 'out';
    detach = jest.fn();
    removeAttr = jest.fn();
    trigger = jest.fn();
    b = jest.fn();
  });

  test("Should call detach, removeAttr, trigger and b when hoverState is not 'in'", () => {
    const e = {
      hoverState,
      $element: {
        removeAttr,
        trigger
      },
      type: 'test'
    };
    const f = {
      detach
    };

    bootstrap.d(e, f, b);

    expect(detach).toHaveBeenCalledTimes(1);
    expect(removeAttr).toHaveBeenCalledWith('aria-describedby');
    expect(trigger).toHaveBeenCalledWith('hidden.bs.test');
    expect(b).toHaveBeenCalledTimes(1);
  });

  test("Should not call detach, removeAttr, trigger and b when hoverState is 'in'", () => {
    hoverState = 'in';
    const e = {
      hoverState,
      $element: {
        removeAttr,
        trigger
      },
      type: 'test'
    };
    const f = {
      detach
    };

    bootstrap.d(e, f, b);

    expect(detach).toHaveBeenCalledTimes(0);
    expect(removeAttr).toHaveBeenCalledTimes(0);
    expect(trigger).toHaveBeenCalledTimes(0);
    expect(b).toHaveBeenCalledTimes(0);
  });
});
