// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=d_39bb39108d
ROOST_METHOD_SIG_HASH=d_72e6da76f1


*/

// ********RoostGPT********
const bootstrap = require('../js/bootstrap.min.js');

describe("Test suite for method d in bootstrap.min.js", () => {
  let e;
  let f;
  let b;

  beforeEach(() => {
    e = { hoverState: 'in', $element: { removeAttr: jest.fn(), trigger: jest.fn() }, type: 'test' };
    f = { detach: jest.fn() };
    b = jest.fn();
  });

  test("It should call detach method of f, removeAttr and trigger method of $element of e when hoverState is not 'in'", () => {
    e.hoverState = 'out';
    bootstrap.d();
    expect(f.detach).toHaveBeenCalled();
    expect(e.$element.removeAttr).toHaveBeenCalledWith('aria-describedby');
    expect(e.$element.trigger).toHaveBeenCalledWith('hidden.bs.' + e.type);
    expect(b).toHaveBeenCalled();
  });

  test("It should not call detach method of f, removeAttr and trigger method of $element of e when hoverState is 'in'", () => {
    e.hoverState = 'in';
    bootstrap.d();
    expect(f.detach).not.toHaveBeenCalled();
    expect(e.$element.removeAttr).not.toHaveBeenCalled();
    expect(e.$element.trigger).not.toHaveBeenCalled();
    expect(b).not.toHaveBeenCalled();
  });
});
