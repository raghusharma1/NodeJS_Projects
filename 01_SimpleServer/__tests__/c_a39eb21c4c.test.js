// ********RoostGPT********
/*
Test generated by RoostGPT for test sampleNodeJSEnv using AI Type  and AI Model 

ROOST_METHOD_HASH=c_e5ad5cd4a4
ROOST_METHOD_SIG_HASH=c_a39eb21c4c


*/

// ********RoostGPT********
// Importing necessary modules
const bootstrap = require('../js/bootstrap.min');

// Test Suite for c function
describe('c function in bootstrap.min.js', () => {
  // Test case 1: Check if the function is defined
  test('Check if the function is defined', () => {
    expect(bootstrap.c).toBeDefined();
  });

  // Test case 2: Check if the function returns correct output for given input
  // Note: As the function c is not pure and involves side effects, we need to mock the dependencies and check the called functions and parameters.
  test('Check if the function works correctly', () => {
    const mockThis = {
      each: jest.fn((func) => func()),
    };
    const mockData = {
      data: jest.fn(),
    };
    const mockNewB = jest.fn();
    const mockC = jest.fn();
    const a = jest.fn(() => mockData);
    const b = jest.fn(() => mockNewB);
    const c = 'test';

    bootstrap.c.call(mockThis, c);

    expect(mockThis.each).toHaveBeenCalled();
    expect(a).toHaveBeenCalledWith(mockThis);
    expect(mockData.data).toHaveBeenCalledWith('bs.scrollspy');
    expect(mockData.data).toHaveBeenCalledWith('bs.scrollspy', mockNewB);
    expect(b).toHaveBeenCalledWith(mockThis, mockC);
    expect(mockC).toHaveBeenCalled();
  });
});
